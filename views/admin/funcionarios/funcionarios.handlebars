<div class="container-fluid pl-4 pr-4">
    
    {{#each erros}}
        <div class="alert alert-danger">{{texto}}</div>
    {{else}}

    {{/each}}

    <h2>Lista de funcion√°rios</h2>
    <hr>

    <div class="row">
        <div class="col-md-6 mt-4" style="float:none;margin:auto;">
            <input class="form-control flex-grow-0" id="inputFiltro" type="text" placeholder="Filtro">
        </div>
    </div>

    {{#if funcionarios}}
    <div id="lista">
        <table class="mt-5 table" id="myTable">
            <thead>
            <tr>
                <th onclick="sortTable(0)" scope="col">Nome</th>
                <th onclick="sortTable(1)" scope="col">Departamento</th>
                <th onclick="sortTable(2)" scope="col">Cargo</th>
            </tr>
            </thead>
            
            <tbody id="filtro">
            {{#each funcionarios}}
                <tr style="cursor: pointer;" id="row" data-name="{{_id}}" onclick="saltaParaFuncionario(this)">
                    <td scope="row">{{nome}}</td>
                    <td>{{departamento}}</td>
                    <td>{{cargoToString role}}</td>
                </tr>
            {{else}}

            {{/each}}
            </tbody>
        </table>
    </div>
    {{else}}
    {{/if}}
</div>

<script>
    $(document).ready(function(){
        $("#inputFiltro").on("keyup", function() {
            var value = $(this).val().toLowerCase();
            $("#filtro tr").filter(function() {
            $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });
    });

    function saltaParaFuncionario(handle) {
        window.location.href = "/funcionario/"+handle.dataset.name;
    } 

    window.onload = function() {
        history.replaceState({}, null, "/funcionarios")
    };

    function sortTable(n) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById("myTable");
        switching = true;
    
        dir = "asc"; 
    
        while (switching) {
        
        switching = false;
        rows = table.rows;
        
        for (i = 1; i < (rows.length - 1); i++) {
            
            shouldSwitch = false;
            
            x = rows[i].getElementsByTagName("TD")[n];
            y = rows[i + 1].getElementsByTagName("TD")[n];
            
            if (dir == "asc") {
            if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                shouldSwitch= true;
                break;
            }
            } else if (dir == "desc") {
            if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                shouldSwitch = true;
                break;
            }
            }
        }
        if (shouldSwitch) {
            rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
            switching = true;
            switchcount ++;
        } else {
            if (switchcount == 0 && dir == "asc") {
            dir = "desc";
            switching = true;
            }
        }
        }
    } 

    function sortTable2(n) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById("myTable");
        switching = true;
    
        dir = "asc"; 
    
        while (switching) {
        
        switching = false;
        rows = table.rows;
        
        for (i = 1; i < (rows.length - 1); i++) {
            
            shouldSwitch = false;
            
            x = rows[i].getElementsByTagName("TD")[n];
            y = rows[i + 1].getElementsByTagName("TD")[n];
            var xN = parseInt(x.getElementsByTagName("div")[1].getAttribute("id"))
            var yN = parseInt(y.getElementsByTagName("div")[1].getAttribute("id"))
            if (dir == "asc") {
            if (xN > yN) {
                shouldSwitch= true;
                break;
            }
            } else if (dir == "desc") {
            if (xN < yN) {
                shouldSwitch = true;
                break;
            }
            }
        }
        if (shouldSwitch) {
            rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
            switching = true;
            switchcount ++;
        } else {
            if (switchcount == 0 && dir == "asc") {
            dir = "desc";
            switching = true;
            }
        }
        }
    } 


</script>